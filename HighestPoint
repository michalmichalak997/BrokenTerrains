//This program compares 3D Points in terms of Z coordinate. 
//The points with greatest and smallest elevations (Z coordinate) are selected. We used lambda expressions to achieve the desired results.
//This program is part of a synthetic terrain generation system.

#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

struct Point {

double xc,yc,zc;
Point(double xcoord, double ycoord,  double zcoord){
this->xc=xcoord;
this->yc=ycoord;
this->zc=zcoord;
}

 double z() const
 {
return this->zc;
}

};

int main()
{
    vector<Point>points_b_inclined;

    points_b_inclined={Point(1,4,6), Point(1,4,90), Point(0,4,-81), Point(0,4,91), Point(0,4,91.5)};

    auto& greatest_elev = *max_element(points_b_inclined.begin(), points_b_inclined.end(),
	[](const Point& point1, const Point& point2) { return (point1.z() < point2.z()); }
);
     auto& smallest_elev = *min_element(points_b_inclined.begin(), points_b_inclined.end(),
	[](const Point& point1, const Point& point2) { return (point1.z() < point2.z()); }
);

cout << "Max z:  "<< greatest_elev.z() << "  Min. z:  "  << smallest_elev.z() << endl;

auto elevation_difference = greatest_elev.z() - smallest_elev.z();

cout << elevation_difference << endl;


    return 0;
}
